name: Docker Publish

on:
  # 任何分支（除了 master）的 push 和 tag 会触发发布工作流
  push:
    branches-ignore:
      - master
    tags-ignore:
      - master
  # 允许手动触发并输入自定义 tag
  workflow_dispatch:
    inputs:
      custom_tag:
        description: 'Custom Docker tag (optional)'
        required: false

env:
  # 使用 ghcr.io 作为默认的 Docker Registry
  REGISTRY: ghcr.io
  # 镜像名称为 <GitHub账户>/<仓库名>-<分支名>
  IMAGE_NAME: ${{ github.repository }}-gcc

jobs:
  publish:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装 cosign 工具
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # 设置 BuildKit Docker container builder，支持多平台镜像构建和缓存
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # 登录 Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 提取 Docker 元数据，包括标签和标签
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ github.event_name == 'workflow_dispatch' && inputs.custom_tag || github.ref_name }}
            latest

      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true  # 在发布过程中推送镜像
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 签名已发布的 Docker 镜像
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

